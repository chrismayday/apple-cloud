spring:
  application:
    name: provider-eshop


# security.basic.enabled: false

## apple cloud security config
apple.security.browser.signInPage: /order-login.html #默认登录页
apple.security.browser.signInResponseType: JSON #登录成功或失败返回信息(JSON)或者跳转到原请求url(REDIRECT)
apple.security.browser.rememberMeSeconds: 604800 #3600*24*7 = 604800 默认的记住7天
#apple.security.browser.signOutUrl: /apple-logout.html
#apple.security.browser.signUpUrl: /order-signUp.html

## session管理相关配置，参见SessionProperties
apple.security.browser.session.maximumSessions: 1
#apple.security.browser.session.maxSessionsPreventsLogin: true
apple.security.browser.session.sessionInvalidUrl: /apple-session-invalid.html

## 验证码的配置
apple.security.code.image.width: 67 #验证码图形宽度
apple.security.code.image.height: 23 #验证码图形高度
apple.security.code.image.length: 4 #验证码长度
apple.security.code.image.expireIn: 60 #过期时间,单:秒
apple.security.code.image.urlAndMethods: /order/*,/teacher:put #需要验证码的请求url+method

## 第三方登录social的配置  http://www.applecloud.com/qq.callback
apple.security.social.filterProcessesUrl: /qqLogin
apple.security.social.qq.providerId: qq.callback
apple.security.social.qq.app-id: 1106384767
apple.security.social.qq.app-secret: xL1neJQ7EcW9BGmn

#认证服务器注册的第三方应用配置项，参见OAuth2ClientProperties
apple.security.oauth2.clients[0].clientId: apple
apple.security.oauth2.clients[0].clientSecret: appleSecret
apple.security.oauth2.clients[0].accessTokenValidateSeconds: 3600

apple.security.oauth2.clients[1].clientId: test
apple.security.oauth2.clients[1].clientSecret: testsecret

#OAuth2认证服务器的tokenStore的类型，可选值为redis和jwt，值为jwt时发出的token为jwt
apple.security.oauth2.tokenStore: jwt  # jwt 或 redis
#使用jwt时为token签名的秘钥
apple.security.oauth2.jwtSigningKey: applefsafaffdsafdsakkjjk
#刷新refresh_token可以设置得比token长，这样，在用户发现token过期的时候，调用refresh_token方法。